{"version":3,"file":"shady-render.js","sourceRoot":"","sources":["../src/lib/shady-render.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\ndeclare global {\n  interface Window {\n    ShadyCSS: any;\n  }\n  class ShadowRoot {}\n}\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected.` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = new Map<TemplateStringsArray, Template>();\n        templateCaches.set(cacheKey, templateCache);\n      }\n      let template = templateCache.get(result.strings);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.set(result.strings, template);\n      }\n      return template;\n    };\n\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nfunction removeStylesFromLitTemplates(scopeName: string) {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n}\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (renderedDOM: DocumentFragment, template: Template, scopeName: string) => {\n      shadyRenderSet.add(scopeName);\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      // If there are no styles, there's no work to do.\n      if (styles.length === 0) {\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < styles.length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      insertNodeIntoTemplate(\n          template, condensedStyle, template.element.content.firstChild);\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n      if (window.ShadyCSS.nativeShadow) {\n        // When in native Shadow DOM, re-add styling to rendered content using\n        // the style ShadyCSS produced.\n        const style = template.element.content.querySelector('style')!;\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else {\n        // When not in native Shadow DOM, at this point ShadyCSS will have\n        // removed the style from the lit template and parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        template.element.content.insertBefore(\n            condensedStyle, template.element.content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport function render(\n    result: TemplateResult,\n    container: Element|DocumentFragment,\n    scopeName: string) {\n  const hasRendered = parts.has(container);\n  litRender(result, container, shadyTemplateFactory(scopeName));\n  // When rendering a TemplateResult, scope the template with ShadyCSS\n  if (container instanceof ShadowRoot && compatibleShadyCSSVersion &&\n      result instanceof TemplateResult) {\n    // Scope the element template one time only for this scope.\n    if (!shadyRenderSet.has(scopeName)) {\n      const part = parts.get(container)!;\n      const instance = part.value as TemplateInstance;\n      prepareTemplateStyles(\n          (container as ShadowRoot), instance.template, scopeName);\n    }\n    // Update styling if this is the initial render to this container.\n    if (!hasRendered) {\n      window.ShadyCSS.styleElement((container as ShadowRoot).host);\n    }\n  }\n}\n"]}