{"version":3,"file":"render.js","sourceRoot":"","sources":["../src/lib/render.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;AAEH,OAAO,EAAC,WAAW,EAAC,MAAM,UAAU,CAAC;AACrC,OAAO,EAAC,QAAQ,EAAC,MAAM,YAAY,CAAC;AACpC,OAAO,EAAC,eAAe,IAAI,sBAAsB,EAAkB,MAAM,uBAAuB,CAAC;AAGjG,MAAM,CAAC,MAAM,KAAK,GAAG,IAAI,OAAO,EAAkB,CAAC;AAEnD;;;;;;;;;;;;;GAaG;AACH,MAAM,iBACF,MAAsB,EACtB,SAAmC,EACnC,kBAAmC,sBAAsB;IAC3D,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAChC,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,WAAW,CAAC,SAAS,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC;QAC7C,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,GAAG,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;KAC5B;IACD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACtB,IAAI,CAAC,MAAM,EAAE,CAAC;AAChB,CAAC","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {templateFactory as defaultTemplateFactory, TemplateFactory} from './template-factory.js';\nimport {TemplateResult} from './template-result.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param templateFactory a function to create a Template or retreive one from\n *     cache.\n */\nexport function render(\n    result: TemplateResult,\n    container: Element|DocumentFragment,\n    templateFactory: TemplateFactory = defaultTemplateFactory) {\n  let part = parts.get(container);\n  if (part === undefined) {\n    removeNodes(container, container.firstChild);\n    parts.set(container, part = new NodePart(templateFactory));\n    part.appendInto(container);\n  }\n  part.setValue(result);\n  part.commit();\n}\n"]}