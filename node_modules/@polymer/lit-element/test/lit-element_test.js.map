{"version":3,"file":"lit-element_test.js","sourceRoot":"","sources":["../src/test/lit-element_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;;;;;;;AAEH,OAAO,EACL,IAAI,EACJ,UAAU,EACV,QAAQ,EAGT,MAAM,mBAAmB,CAAC;AAE3B,OAAO,EACL,mBAAmB,EACnB,yBAAyB,EAC1B,MAAM,mBAAmB,CAAC;AAE3B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,KAAK,CAAC,YAAY,EAAE,GAAG,EAAE;IACvB,IAAI,SAAsB,CAAC;IAE3B,KAAK,CAAC,GAAG,EAAE;QACT,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,GAAG,EAAE;QACZ,IAAI,SAAS,IAAI,SAAS,CAAC,UAAU,EAAE;YACrC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;SAC7C;IACH,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;QACzD,MAAM,QAAQ,GAAG,aAAa,CAAC;QAC/B,MAAM,IAAI,GAAG,mBAAmB,EAAE,CAAC;QACnC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,KAAM,SAAQ,UAAU;YAClD,MAAM,KAAK,OAAO,IAAI,CAAA,GAAG,QAAQ,EAAE,CAAC,CAAC,CAAC;SACvC,CAAC,CAAC;QACH,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC5B,UAAU,CAAC,GAAG,EAAE;gBACd,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;gBACzB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EACnD,QAAQ,CAAC,CAAC;gBACvB,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC9D,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBACE,gBAAW,GAAG,CAAC,CAAC;YAElB,CAAC;YADC,MAAM,KAAK,OAAO,IAAI,CAAA,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;SACjD;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;QACvE,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;QACvE,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;IAEH,IAAI,CACA,+EAA+E,EAC/E,KAAK,IAAI,EAAE;QACT,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBACE,gBAAW,GAAG,CAAC,CAAC;YAElB,CAAC;YADC,MAAM,KAAK,OAAO,IAAI,CAAA,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;SACjD;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;QACvE,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;QACvE,EAAE,CAAC,aAAa,EAAE,CAAC;QACnB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;QACvE,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;IAEP,IAAI,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAEE,gBAAW,GAAG,IAAI,CAAC;gBACnB,gBAAW,GAAG,CAAC,CAAC;YAKlB,CAAC;YAHC,YAAY,KAAK,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAE3C,MAAM,KAAK,OAAO,IAAI,CAAA,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;SACjD;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;QACvE,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC;QACvB,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;QACvE,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;QACtB,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;QACvE,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,QAAQ,GAAG,aAAa,CAAC;QAC/B,MAAM,IAAI,GAAG,mBAAmB,EAAE,CAAC;QACnC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,KAAM,SAAQ,UAAU;YAClD,MAAM,KAAK,OAAO,IAAI,CAAA,GAAG,QAAQ,EAAE,CAAC,CAAC,CAAC;YAEtC,gBAAgB,KAAK,OAAO,IAAI,CAAC,CAAC,CAAC;SACpC,CAAC,CAAC;QACH,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAO,EAAiB,CAAC,cAAc,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QAC5B,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,QAAQ,GAAG,aAAa,CAAC;QAC/B,MAAM,CAAE,SAAQ,UAAU;YACxB,MAAM,KAAK,OAAO,IAAI,CAAA,GAAG,QAAQ,EAAE,CAAC,CAAC,CAAC;SACvC;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,UAAU,GAAG,CAAC,KAAU,EAAE,GAAQ,EAAE,EAAE,CACxC,GAAG,KAAK,SAAS,IAAI,KAAK,GAAG,GAAG,CAAC;QACrC,MAAM,aAAa,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtD,MAAM,WAAW,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,GAAG,KAAK,OAAO,CAAC;QACpD,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAkBE,WAAM,GAAG,QAAQ,CAAC;gBAClB,SAAI,GAAG,MAAM,CAAC;gBACd,eAAU,GAAG,YAAY,CAAC;gBAC1B,eAAU,GAAG,EAAE,CAAC;gBAChB,kBAAa,GAAG,CAAC,CAAC;gBAClB,gBAAW,GAAG,CAAC,CAAC;gBAChB,QAAG,GAAG,EAAE,CAAC;gBAET,gBAAW,GAAG,CAAC,CAAC;YAQlB,CAAC;YAjCC,MAAM,KAAK,UAAU;gBACnB,OAAO;oBACL,MAAM,EAAG,EAAC,SAAS,EAAG,KAAK,EAAC;oBAC5B,IAAI,EAAG,EAAC,SAAS,EAAG,IAAI,EAAC;oBACzB,UAAU,EAAG,EAAC,SAAS,EAAG,QAAQ,EAAE,OAAO,EAAG,IAAI,EAAC;oBACnD,UAAU,EAAG,EAAC,UAAU,EAAC;oBACzB,aAAa,EAAG,EAAC,IAAI,EAAG,aAAa,EAAC;oBACtC,WAAW,EAAG,EAAC,OAAO,EAAG,IAAI,EAAE,IAAI,EAAG,EAAC,WAAW,EAAC,EAAC;oBACpD,GAAG,EAAG;wBACJ,SAAS,EAAG,UAAU;wBACtB,UAAU;wBACV,IAAI,EAAG,EAAC,aAAa,EAAE,WAAW,EAAC;wBACnC,OAAO,EAAG,IAAI;qBACf;iBACF,CAAC;YACJ,CAAC;YAYD,MAAM,CAAC,OAAuB;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACxB,CAAC;YAED,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAC1C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;QACrD,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACrC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjC,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QACzC,EAAE,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;QAC1C,EAAE,CAAC,WAAW,GAAG,CAAC,CAAC;QACnB,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;QACX,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QAC3C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;QACrD,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QACvC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;QACrD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,EAAE,CAAC,UAAU,GAAG,CAAC,CAAC;QAClB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC;QACnB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACtC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,UAAU,GAAG,CAAC,KAAU,EAAE,GAAQ,EAAE,EAAE,CACxC,GAAG,KAAK,SAAS,IAAI,KAAK,GAAG,GAAG,CAAC;QACrC,MAAM,aAAa,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtD,MAAM,WAAW,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,GAAG,KAAK,OAAO,CAAC;QACpD,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAEiC,WAAM,GAAG,QAAQ,CAAC;gBACnB,SAAI,GAAG,MAAM,CAAC;gBAE5C,eAAU,GAAG,YAAY,CAAC;gBACF,eAAU,GAAG,EAAE,CAAC;gBACN,kBAAa,GAAG,CAAC,CAAC;gBACH,gBAAW,GAAG,CAAC,CAAC;gBAOjE,QAAG,GAAG,EAAE,CAAC;gBAET,gBAAW,GAAG,CAAC,CAAC;YAQlB,CAAC;YANC,MAAM,CAAC,OAAuB;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACxB,CAAC;YAED,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;SAC5B;QAvBgC;YAA9B,QAAQ,CAAC,EAAC,SAAS,EAAG,KAAK,EAAC,CAAC;yCAAmB;QACnB;YAA7B,QAAQ,CAAC,EAAC,SAAS,EAAG,IAAI,EAAC,CAAC;uCAAe;QAE5C;YADC,QAAQ,CAAC,EAAC,SAAS,EAAG,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;6CACtB;QACF;YAAvB,QAAQ,CAAC,EAAC,UAAU,EAAC,CAAC;6CAAiB;QACN;YAAjC,QAAQ,CAAC,EAAC,IAAI,EAAG,aAAa,EAAC,CAAC;gDAAmB;QACH;YAAhD,QAAQ,CAAC,EAAC,OAAO,EAAG,IAAI,EAAE,IAAI,EAAE,EAAC,WAAW,EAAC,EAAC,CAAC;8CAAiB;QAOjE;YANC,QAAQ,CAAC;gBACR,SAAS,EAAG,UAAU;gBACtB,UAAU;gBACV,IAAI,EAAE,EAAC,aAAa,EAAE,WAAW,EAAC;gBAClC,OAAO,EAAE,IAAI;aACd,CAAC;sCACO;QAWX,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAC1C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;QACrD,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACrC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjC,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QACzC,EAAE,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;QAC1C,EAAE,CAAC,WAAW,GAAG,CAAC,CAAC;QACnB,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;QACX,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QAC3C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;QACrD,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QACvC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;QACrD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,EAAE,CAAC,UAAU,GAAG,CAAC,CAAC;QAClB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC;QACnB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACtC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;QACvE,MAAM,UAAU,GAAG,CAAC,KAAU,EAAE,GAAQ,EAAE,EAAE,CACxC,GAAG,KAAK,SAAS,IAAI,KAAK,GAAG,GAAG,CAAC;QACrC,MAAM,aAAa,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtD,MAAM,WAAW,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,GAAG,KAAK,OAAO,CAAC;QACpD,MAAM,CAAE,SAAQ,UAAU;YA2BxB;gBACE,KAAK,EAAE,CAAC;gBA1Bc,eAAU,GAAG,EAAE,CAAC;gBACN,kBAAa,GAAG,CAAC,CAAC;gBACH,gBAAW,GAAG,CAAC,CAAC;gBAOjE,QAAG,GAAG,EAAE,CAAC;gBAET,gBAAW,GAAG,CAAC,CAAC;gBAgBd,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;YACjC,CAAC;YAjBD,MAAM,KAAK,UAAU;gBACnB,OAAO;oBACL,MAAM,EAAG,EAAC,SAAS,EAAG,KAAK,EAAC;oBAC5B,IAAI,EAAG,EAAC,SAAS,EAAG,IAAI,EAAC;oBACzB,UAAU,EAAG,EAAC,SAAS,EAAG,QAAQ,EAAE,OAAO,EAAG,IAAI,EAAC;iBACpD,CAAC;YACJ,CAAC;YAaD,MAAM,CAAC,OAAuB;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACxB,CAAC;YAED,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;SAC5B;QAtCyB;YAAvB,QAAQ,CAAC,EAAC,UAAU,EAAC,CAAC;6CAAiB;QACN;YAAjC,QAAQ,CAAC,EAAC,IAAI,EAAG,aAAa,EAAC,CAAC;gDAAmB;QACH;YAAhD,QAAQ,CAAC,EAAC,OAAO,EAAG,IAAI,EAAE,IAAI,EAAE,EAAC,WAAW,EAAC,EAAC,CAAC;8CAAiB;QAOjE;YANC,QAAQ,CAAC;gBACR,SAAS,EAAG,UAAU;gBACtB,UAAU;gBACV,IAAI,EAAE,EAAC,aAAa,EAAE,WAAW,EAAC;gBAClC,OAAO,EAAE,IAAI;aACd,CAAC;sCACO;QA8BX,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAC1C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;QACrD,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACrC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjC,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QACzC,EAAE,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;QAC1C,EAAE,CAAC,WAAW,GAAG,CAAC,CAAC;QACnB,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;QACX,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QAC3C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;QACrD,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QACvC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;QACrD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,EAAE,CAAC,UAAU,GAAG,CAAC,CAAC;QAClB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC;QACnB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACtC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,aAAa,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtD,MAAM,eAAe,GAAG,CAAC,KAAU,EAAE,EAAE,CACnC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;YACnD,CAAC,CAAC,KAAK;YACP,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC;QAC1B,MAAM,WAAW,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,GAAG,KAAK,OAAO,CAAC;QACpD,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAiBE,WAAM,GAAG,QAAQ,CAAC;gBAClB,SAAI,GAAG,MAAM,CAAC;gBACd,eAAU,GAAG,YAAY,CAAC;gBAC1B,kBAAa,GAAG,CAAC,CAAC;gBAClB,gBAAW,GAAkB,CAAC,CAAC;gBAC/B,QAAG,GAAG,EAAE,CAAC;YAGX,CAAC;YAxBC,MAAM,KAAK,UAAU;gBACnB,OAAO;oBACL,MAAM,EAAG,EAAC,SAAS,EAAG,KAAK,EAAC;oBAC5B,IAAI,EAAG,EAAC,SAAS,EAAG,IAAI,EAAC;oBACzB,UAAU,EAAG,EAAC,SAAS,EAAG,QAAQ,EAAE,OAAO,EAAG,IAAI,EAAC;oBACnD,aAAa,EAAG,EAAC,IAAI,EAAG,aAAa,EAAC;oBACtC,WAAW,EACP,EAAC,OAAO,EAAG,IAAI,EAAE,IAAI,EAAG,EAAC,WAAW,EAAG,eAAe,EAAC,EAAC;oBAC5D,GAAG,EAAG;wBACJ,SAAS,EAAG,UAAU;wBACtB,IAAI,EAAG,EAAC,aAAa,EAAE,WAAW,EAAC;wBACnC,OAAO,EAAG,IAAI;qBACf;iBACF,CAAC;YACJ,CAAC;YASD,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,MAAM,IAAI,GAAG,mBAAmB,EAAE,CAAC;QACnC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC/B,SAAS,CAAC,SAAS,GAAG,IAAI,IAAI;;;;;;6BAML,IAAI,GAAG,CAAC;QACjC,MAAM,EAAE,GAAG,SAAS,CAAC,UAAe,CAAC;QACrC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC;QAC7C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC3B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC;QAC7C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,IAAI,MAAM,CAAC,qBAAqB,EAAE;QAChC,IAAI,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;;YAClD,MAAM,GAAG,GAAG,MAAM,EAAE,CAAC;YAErB,MAAM,CAAE,SAAQ,UAAU;gBAA1B;;oBAGE,gBAAW,GAAG,CAAC,CAAC;oBAChB,QAAG,GAAG,CAAC,CAAC;oBACR,QAAK,GAAG,CAAC,CAAC;gBAQZ,CAAC;gBAXC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;gBAK1D,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;gBAE3B,MAAM,CAAC,iBAAiC;oBACtC,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;gBAClC,CAAC;aACF;iBARE,GAAG;YASN,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;YAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;YACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YACzB,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;YACZ,MAAM,EAAE,CAAC,cAAc,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YACzB,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YACb,MAAM,EAAE,CAAC,cAAc,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;YAChE,MAAM,GAAG,GAAG,MAAM,EAAE,CAAC;YAErB,MAAM,CAAE,SAAQ,UAAU;gBAExB,MAAM,KAAK,UAAU;oBACnB,OAAO;wBACL,CAAC,GAAG,CAAC,EAAG;4BACN,SAAS,EAAG,KAAK;4BACjB,OAAO,EAAG,IAAI;4BACd,IAAI,EAAG,CAAC,KAAa,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG;yBAC9C;qBACF,CAAC;gBACJ,CAAC;gBAED;oBACE,KAAK,EAAE,CAAC;oBACP,IAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACzB,CAAC;gBAED,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;aAC5B;YACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;YAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAS,CAAC;YAC1B,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;YAC1C,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACZ,MAAM,EAAE,CAAC,cAAc,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;YAC1C,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC5B,MAAM,EAAE,CAAC,cAAc,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YAC5C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;KACJ;IAED,IAAI,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QAC3D,MAAM,UAAU,GAAG,CAAC,KAAU,EAAE,GAAQ,EAAE,EAAE,CACxC,GAAG,KAAK,SAAS,IAAI,KAAK,GAAG,GAAG,CAAC;QACrC,MAAM,aAAa,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtD,MAAM,WAAW,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,GAAG,KAAK,OAAO,CAAC;QACpD,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAUE,WAAM,GAAG,QAAQ,CAAC;gBAClB,SAAI,GAAG,MAAM,CAAC;gBACd,eAAU,GAAG,YAAY,CAAC;gBAC1B,eAAU,GAAG,EAAE,CAAC;gBAEhB,gBAAW,GAAG,CAAC,CAAC;YAQlB,CAAC;YAtBC,MAAM,KAAK,UAAU;gBACnB,OAAO;oBACL,MAAM,EAAG,EAAC,SAAS,EAAG,KAAK,EAAC;oBAC5B,IAAI,EAAG,EAAC,SAAS,EAAG,IAAI,EAAC;oBACzB,UAAU,EAAG,EAAE;oBACf,UAAU,EAAG,EAAE;iBAChB,CAAC;YACJ,CAAC;YASD,MAAM,CAAC,OAAuB;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACxB,CAAC;YAED,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAEhD,MAAM,CAAE,SAAQ,CAAC;YAAjB;;gBAUE,kBAAa,GAAG,CAAC,CAAC;gBAClB,gBAAW,GAAG,CAAC,CAAC;gBAChB,QAAG,GAAG,EAAE,CAAC;YACX,CAAC;YAZC,MAAM,KAAK,UAAU;gBACnB,OAAO;oBACL,UAAU,EAAG,EAAC,SAAS,EAAG,QAAQ,EAAE,OAAO,EAAG,IAAI,EAAC;oBACnD,UAAU,EAAG,EAAC,UAAU,EAAC;oBACzB,aAAa,EAAG,EAAE;oBAClB,WAAW,EAAG,EAAE;iBACjB,CAAC;YACJ,CAAC;SAKF;QAED,MAAM,CAAE,SAAQ,CAAC;YACf,MAAM,KAAK,UAAU;gBACnB,OAAO;oBACL,aAAa,EAAG,EAAC,IAAI,EAAG,aAAa,EAAC;oBACtC,WAAW,EAAG,EAAC,OAAO,EAAG,IAAI,EAAE,IAAI,EAAG,EAAC,WAAW,EAAC,EAAC;oBACpD,GAAG,EAAG;wBACJ,SAAS,EAAG,UAAU;wBACtB,UAAU;wBACV,IAAI,EAAG,EAAC,aAAa,EAAE,WAAW,EAAC;wBACnC,OAAO,EAAG,IAAI;qBACf;iBACF,CAAC;YACJ,CAAC;SACF;QAED,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAEhD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAC1C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;QACrD,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACrC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjC,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QACzC,EAAE,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;QAC1C,EAAE,CAAC,WAAW,GAAG,CAAC,CAAC;QACnB,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;QACX,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QAC3C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;QACrD,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QACvC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;QACrD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,EAAE,CAAC,UAAU,GAAG,CAAC,CAAC;QAClB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC;QACnB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACtC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAChE,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAQE,QAAG,GAAG,CAAC,CAAC;gBACR,QAAG,GAAG,KAAK,CAAC;YAGd,CAAC;YAXC,MAAM,KAAK,UAAU;gBACnB,OAAO;oBACL,GAAG,EAAG,EAAC,SAAS,EAAG,KAAK,EAAE,OAAO,EAAG,IAAI,EAAC;oBACzC,GAAG,EAAG,EAAC,OAAO,EAAG,IAAI,EAAC;iBACvB,CAAC;YACJ,CAAC;YAKD,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAEhD,MAAM,CAAE,SAAQ,CAAC;YAAjB;;gBAKE,QAAG,GAAG,CAAC,CAAC;gBACR,QAAG,GAAG,QAAQ,CAAC;gBACf,QAAG,GAAG,CAAC,CAAC;YAGV,CAAC;YATC,MAAM,KAAK,UAAU;gBACnB,OAAO,EAAC,GAAG,EAAG,EAAC,SAAS,EAAG,KAAK,EAAC,EAAE,GAAG,EAAG,EAAE,EAAC,CAAC;YAC/C,CAAC;YAMD,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAEhD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;QACpB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC3B,MAAM,GAAG,CAAC,cAAc,CAAC;QAEzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;QAC1C,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC5B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;QAC5C,MAAM,CAAC,WAAW,CAAE,EAAU,CAAC,GAAG,CAAC,CAAC;QAEpC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAUE,QAAG,GAAG,CAAC,CAAC;YAGV,CAAC;YAZC,MAAM,KAAK,UAAU;gBACnB,OAAO;oBACL,GAAG,EAAG;wBACJ,OAAO,EAAG,IAAI;wBACd,IAAI,EAAG,EAAC,WAAW,EAAG,CAAC,KAAU,EAAE,EAAE,CAAC,GAAG,KAAK,GAAG,MAAM,EAAE,EAAC;qBAC3D;iBACF,CAAC;YACJ,CAAC;YAID,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,MAAM,EAAE,CAAC,CAAC;QACnD,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;QACX,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,MAAM,EAAE,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACvD,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAKE,QAAG,GAAG,IAAI,CAAC;YAGb,CAAC;YAPC,MAAM,KAAK,UAAU;gBACnB,OAAO,EAAC,GAAG,EAAG,EAAC,IAAI,EAAG,OAAO,EAAE,OAAO,EAAG,IAAI,EAAC,EAAC,CAAC;YAClD,CAAC;YAID,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;QACzC,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC;QACf,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;QAC5C,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC;QACd,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAGE,QAAG,GAAG,KAAK,CAAC;YAGd,CAAC;YALC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;YAI9C,MAAM,KAAK,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SACvC;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QACzB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;QACzE,EAAE,CAAC,GAAG,GAAG,SAAS,CAAC;QACnB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EACnD,SAAS,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;QACvE,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAGE,UAAK,GAAG,GAAG,CAAC;gBACZ,cAAS,GAAG,MAAM,CAAC;gBAEnB,qBAAgB,GAAG,EAAE,CAAC;gBACtB,yBAAoB,GAAG,EAAE,CAAC;YAS5B,CAAC;YAfC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,KAAK,EAAG,EAAE,EAAE,SAAS,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;YAQhE,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;YAE3B,MAAM,CAAC,KAAqB;gBAC1B,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACpB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC;gBACnC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC;YAC7C,CAAC;SACF;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QACzB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;QAC9C,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC;QACf,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;QAC9C,EAAE,CAAC,SAAS,GAAG,OAAO,CAAC;QACvB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;QAC/C,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QACtC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;QAC/C,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC;QACf,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QACtC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAChE,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAGE,QAAG,GAAG,KAAK,CAAC;YAGd,CAAC;YALC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;YAI9C,MAAM,KAAK,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SACvC;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;QACzE,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QAClC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EACnD,SAAS,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAKE,SAAI,GAAa,EAAE,CAAC;gBACpB,QAAG,GAAG,CAAC,CAAC;YAcV,CAAC;YAjBC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAE,GAAG,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;YAKxD,IAAI,GAAG,KAAK,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAEhC,IAAI,GAAG,CAAC,KAAK;gBACX,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;gBACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC3B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACjC,CAAC;YAED,MAAM;gBACJ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACzB,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YACtC,CAAC;SACF;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAC7B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC3B,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC,UAAW,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,oEAAoE,EACpE,KAAK,IAAI,EAAE;QACT,MAAM,aAAa,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtD,MAAM,WAAW,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,GAAG,KAAK,OAAO,CAAC;QACpD,MAAM,UAAU,GAAG,CAAC,KAAU,EAAE,GAAQ,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,GAAG,CAAC;QACvE,MAAM,CAAE,SAAQ,UAAU;YAgBxB;gBACE,KAAK,EAAE,CAAC;gBAfV,gBAAW,GAAG,CAAC,CAAC;gBAgBd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;YACf,CAAC;YAdD,MAAM,KAAK,UAAU;gBACnB,OAAO;oBACL,GAAG,EAAG;wBACJ,SAAS,EAAG,UAAU;wBACtB,OAAO,EAAG,IAAI;wBACd,IAAI,EAAG,EAAC,aAAa,EAAE,WAAW,EAAC;wBACnC,UAAU;qBACX;iBACF,CAAC;YACJ,CAAC;YAOD,MAAM,CAAC,OAAuB;gBAC5B,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC;YAED,IAAI,GAAG,KAAK,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAEhC,IAAI,GAAG,CAAC,KAAK;gBACX,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;gBACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC3B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACjC,CAAC;YAED,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAC,CAAC;QACpD,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAC,CAAC;QACpD,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;QACX,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAC,CAAC;QACpD,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAER,IAAI,CACA,4EAA4E,EAC5E,KAAK,IAAI,EAAE;QACT,MAAM,CAAE,SAAQ,UAAU;YAGxB,MAAM;gBACJ,MAAM,IAAI,GAAG,MAAM,CAAC;gBACpB,MAAM,IAAI,GAAG,MAAM,CAAC;gBACpB,MAAM,KAAK,GAAG,CAAC,CAAQ,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjD,OAAO,IAAI,CACX,cAAc,IAAI,YAAY,IAAI,WAAW,KAAK,UAAU,CAAC;YAC/D,CAAC;SACF;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,GAAG,EAAE,CAAC,UAAW,CAAC,aAAa,CAAC,KAAK,CAAE,CAAC;QAC/C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;QAC7C,MAAM,CAAC,KAAK,CAAE,CAAS,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QACnB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEP,IAAI,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QAClE,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAEc,QAAG,GAAG,CAAC,CAAC;gBAEpB,oBAAe,GAAG,CAAC,CAAC;gBACpB,oBAAe,GAAG,CAAC,CAAC;YActB,CAAC;YAXC,MAAM,CAAC,iBAAiC;gBACtC,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YAClC,CAAC;YAED,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;YAE3B,YAAY,CAAC,iBAAiC;gBAC5C,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;gBAC3C,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,CAAC;SACF;QAjBa;YAAX,QAAQ,EAAE;sCAAS;QAkBtB,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QAC9B,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAChD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACpC,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACpC,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,IAAI,CACA,8FAA8F,EAC9F,KAAK,IAAI,EAAE;QACT,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAEc,QAAG,GAAG,CAAC,CAAC;gBAEpB,wBAAmB,GAAG,CAAC,CAAC;gBACxB,oBAAe,GAAG,CAAC,CAAC;gBACpB,oBAAe,GAAG,CAAC,CAAC;YAmBtB,CAAC;YAhBC,YAAY;gBACV,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,OAAO,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;YACtC,CAAC;YAED,MAAM,CAAC,iBAAiC;gBACtC,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YAClC,CAAC;YAED,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;YAE3B,YAAY,CAAC,iBAAiC;gBAC5C,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;gBAC3C,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,CAAC;SACF;QAvBa;YAAX,QAAQ,EAAE;sCAAS;QAyBtB,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACpC,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC;QACzB,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;QAC1B,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAChD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACpC,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEP,IAAI,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACxC,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAGE,SAAI,GAAkB,EAAE,CAAC;YAqB3B,CAAC;YAvBC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAC,IAAI,EAAG,MAAM,EAAC,EAAC,CAAC,CAAC,CAAC;YAI3D,YAAY;gBACV,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC/B,OAAO,IAAI,CAAC;YACd,CAAC;YAED,MAAM;gBACJ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACzB,OAAO,IAAI,CAAA,IAAI,CAAC;YAClB,CAAC;YAED,MAAM,CAAC,KAAqB;gBAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBAChC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACpB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACjC,CAAC;YAED,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAElD,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACzC;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC/B,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,EAAE;YACxB,cAAc,EAAE,eAAe,EAAE,QAAQ,EAAE,cAAc,EAAE,cAAc;YACzE,SAAS,EAAE,gBAAgB;SAC5B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;QACtE,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAGE,qBAAgB,GAAG,KAAK,CAAC;gBACzB,QAAG,GAAG,CAAC,CAAC;gBACR,gBAAW,GAAG,CAAC,CAAC;YASlB,CAAC;YAZC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;YAK9C,MAAM,CAAC,KAAqB;gBAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,GAAG,EAAE,CAAC;gBACX,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACtB,CAAC;YAED,MAAM,KAAK,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SACvC;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAW,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAC9C,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;QACX,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAW,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,IAAI,CACA,2FAA2F,EAC3F,KAAK,IAAI,EAAE;QACT,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAME,sBAAiB,GAA6B,SAAS,CAAC;YAS1D,CAAC;YAbC,MAAM,KAAK,UAAU;gBACnB,OAAO,EAAC,GAAG,EAAG,EAAE,EAAE,GAAG,EAAG,EAAE,EAAE,GAAG,EAAG,EAAC,OAAO,EAAG,IAAI,EAAC,EAAC,CAAC;YACtD,CAAC;YAID,MAAM,CAAC,iBAAiC;gBACrC,IAAY,CAAC,GAAG,GAAI,IAAY,CAAC,GAAG,GAAI,IAAY,CAAC,GAAG,CAAC;gBAC1D,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;gBAChC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;YAC7C,CAAC;YAED,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAS,CAAC;QAC1B,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QAC9B,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAChD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;QAC5C,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;QACX,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;QACX,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,OAAO,CAAC,KAAK,EAAE,CAAC;QAChB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAChD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;QAC1C,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;QACX,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,OAAO,CAAC,KAAK,EAAE,CAAC;QAChB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACtB,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAChD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEP,sEAAsE;IACtE,4EAA4E;IAC5E,IAAI,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAYE,QAAG,GAAG,EAAE,CAAC;gBAET,sBAAiB,GAA6B,SAAS,CAAC;YAW1D,CAAC;YAvBC,MAAM,KAAK,UAAU;gBACnB,OAAO;oBACL,EAAE,EAAG,EAAC,OAAO,EAAG,IAAI,EAAC;oBACrB,IAAI,EAAG,EAAC,OAAO,EAAG,IAAI,EAAC;oBACvB,KAAK,EAAG,EAAC,OAAO,EAAG,IAAI,EAAC;oBACxB,GAAG,EAAG,EAAE;iBACT,CAAC;YACJ,CAAC;YAOD,MAAM,CAAC,iBAAiC;gBACrC,IAAY,CAAC,GAAG,GAAI,IAAY,CAAC,GAAG,GAAI,IAAY,CAAC,GAAG,CAAC;gBAC1D,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;gBAChC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;YAC7C,CAAC;YAED,MAAM;gBACJ,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;YACjE,CAAC;SACF;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAS,CAAC;QAC1B,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC;QACf,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;QACb,EAAE,CAAC,IAAI,GAAG,MAAM,CAAC;QACjB,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC;QACnB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAW,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;QAC9D,MAAM,CAAC,KAAK,CAAE,MAAc,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACrC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC;QACd,EAAE,CAAC,IAAI,GAAG,OAAO,CAAC;QAClB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAW,CAAC,WAAW,EAAE,qBAAqB,CAAC,CAAC;QAChE,MAAM,CAAC,KAAK,CAAE,MAAc,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,IAAI,CACA,uFAAuF,EACvF,KAAK,IAAI,EAAE;QACT,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAGE,QAAG,GAAG,CAAC,CAAC;gBACR,gBAAW,GAAG,CAAC,CAAC;gBAChB,WAAM,GAAG,CAAC,CAAC;YAcb,CAAC;YAjBC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;YAK9C,MAAM,CAAC,OAAuB;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACxB,CAAC;YAED,OAAO;gBACL,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE;oBAC1B,IAAI,CAAC,GAAG,EAAE,CAAC;iBACZ;YACH,CAAC;YAED,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,MAAM,GAAG,MAAM,EAAE,CAAC,cAAc,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,GAAG,MAAM,EAAE,CAAC,cAAc,CAAC;QACjC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,GAAG,MAAM,EAAE,CAAC,cAAc,CAAC;QACjC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;IAEP,IAAI,CACA,6EAA6E,EAC7E,KAAK,IAAI,EAAE;QACT,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAGE,QAAG,GAAG,CAAC,CAAC;gBACR,gBAAW,GAAG,CAAC,CAAC;YAclB,CAAC;YAhBC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;YAI9C,MAAM,CAAC,OAAuB;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACxB,CAAC;YAED,OAAO;gBACL,IAAI,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE;oBACjB,IAAI,CAAC,GAAG,EAAE,CAAC;iBACZ;YACH,CAAC;YAED,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,OAAO,CAAC,MAAM,EAAE,CAAC,cAAc,EAAE;SAChC;QACD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEP,IAAI,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;QACxE,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAGE,QAAG,GAAG,CAAC,CAAC;gBACR,gBAAW,GAAG,CAAC,CAAC;gBAChB,WAAM,GAAG,EAAE,CAAC;YAkBd,CAAC;YArBC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;YAK9C,MAAM,CAAC,OAAuB;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACxB,CAAC;YAED,OAAO;gBACL,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE;oBAC1B,IAAI,CAAC,GAAG,EAAE,CAAC;iBACZ;YACH,CAAC;YAED,MAAM,KAAK,OAAO,IAAI,CAAA,EAAE,CAAC,CAAC,CAAC;YAE3B,IAAI,cAAc;gBAChB,OAAO,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC;YACpE,CAAC;SACF;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,cAAc,CAAC;QACvC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACvD,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAGE,qBAAgB,GAAG,KAAK,CAAC;gBACzB,QAAG,GAAG,CAAC,CAAC;YAcV,CAAC;YAhBC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;YAI9C,MAAM,KAAK,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAEtC,IAAI,cAAc;gBAChB,OAAO,CAAC,KAAK,IAAI,EAAE;oBACjB,OAAO,MAAM,KAAK,CAAC,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;wBAC1D,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;4BAC7B,OAAO,CAAC,IAAI,CAAC,CAAC;wBAChB,CAAC,EAAE,CAAC,CAAC,CAAC;oBACR,CAAC,CAAC,CAAC;gBACZ,CAAC,CAAC,EAAE,CAAC;YACP,CAAC;SACF;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,cAAc,CAAC;QACvC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAGE,qBAAgB,GAAG,KAAK,CAAC;gBACzB,QAAG,GAAG,CAAC,CAAC;YAcV,CAAC;YAhBC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;YAI9C,MAAM,KAAK,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAEtC,IAAI,cAAc;gBAChB,OAAO,CAAC,KAAK,IAAI,EAAE;oBACjB,OAAO,MAAM,KAAK,CAAC,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;wBAC1D,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;4BAC7B,OAAO,CAAC,IAAI,CAAC,CAAC;wBAChB,CAAC,EAAE,CAAC,CAAC,CAAC;oBACR,CAAC,CAAC,CAAC;gBACZ,CAAC,CAAC,EAAE,CAAC;YACP,CAAC;SACF;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,MAAM,GAAG,MAAM,EAAE,CAAC,cAAc,CAAC;QACrC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC;QACnC,EAAE,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC5B,MAAM,GAAG,MAAM,EAAE,CAAC,aAAa,EAAa,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAGE,qBAAgB,GAAG,KAAK,CAAC;gBACzB,QAAG,GAAG,IAAI,CAAC;YAWb,CAAC;YAbC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;YAI9C,MAAM,KAAK,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAEtC,IAAI,cAAc;gBAChB,OAAO,KAAK,CAAC,cAAc,CAAC,IAAI,CAC5B,GAAG,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE;oBAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC7B,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,CAAC;SACF;QACD,cAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAEnC,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAEE,UAAK,GAAW,IAAI,CAAC;YAYvB,CAAC;YAVC,MAAM,KAAK,OAAO,IAAI,CAAA,mBAAmB,CAAC,CAAC,CAAC;YAE5C,YAAY,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAEzE,IAAI,cAAc;gBAChB,OAAO,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE;oBACpC,IAAI,CAAC,KAAM,CAAC,GAAG,GAAG,IAAI,CAAC;oBACvB,OAAO,IAAI,CAAC,KAAM,CAAC,cAAc,CAAC;gBACpC,CAAC,CAAC,CAAC;YACL,CAAC;SACF;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,cAAc,CAAC;QACvC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAM,CAAC,UAAW,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QACtD,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAM,CAAC,gBAAgB,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QAC3D,MAAM,IAAI,GAAG,mBAAmB,EAAE,CAAC;QACnC,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACzB,EAAU,CAAC,GAAG,GAAG,IAAI,CAAC;QACtB,EAAU,CAAC,GAAG,GAAG,KAAK,CAAC;QACxB,MAAM,WAAW,GAAG,EAAE,CAAC;QACtB,EAAU,CAAC,GAAG,GAAG,WAAW,CAAC;QAC9B,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAGE,QAAG,GAAG,EAAE,CAAC;gBACT,QAAG,GAAG,IAAI,CAAC;gBACX,QAAG,GAAG,IAAI,CAAC;YAGb,CAAC;YAPC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAE,GAAG,EAAG,EAAE,EAAE,GAAG,EAAG,EAAE,EAAC,CAAC,CAAC,CAAC;YAMlE,MAAM,KAAK,OAAO,IAAI,CAAA,MAAM,CAAC,CAAC,CAAC;SAChC;QACD,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC/B,MAAO,EAAiB,CAAC,cAAc,CAAC;QACxC,MAAM,CAAC,KAAK,CAAE,EAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAE,EAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACrC,MAAM,CAAC,KAAK,CAAE,EAAU,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QAClE,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAKE,QAAG,GAAG,IAAI,CAAC;gBACX,SAAI,GAAG,KAAK,CAAC;YAGf,CAAC;YAPC,MAAM,KAAK,UAAU;gBACnB,OAAO,EAAC,GAAG,EAAG,EAAE,EAAE,IAAI,EAAG,EAAE,EAAE,IAAI,EAAG,EAAC,IAAI,EAAG,OAAO,EAAC,EAAC,CAAC;YACxD,CAAC;YAID,MAAM,KAAK,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SACvC;QACD,cAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAEnC,MAAM,CAAE,SAAQ,UAAU;YAA1B;;gBAEE,UAAK,GAAW,IAAI,CAAC;gBAGrB,QAAG,GAAG,OAAO,CAAC;gBACd,SAAI,GAAG,KAAK,CAAC;YAYf,CAAC;YAdC,MAAM,KAAK,UAAU,KAAK,OAAO,EAAC,GAAG,EAAG,EAAE,EAAE,IAAI,EAAG,EAAC,IAAI,EAAG,OAAO,EAAC,EAAC,CAAC,CAAC,CAAC;YAIvE,MAAM;gBACJ,OAAO,IAAI,CAAA,iBAAiB,IAAI,CAAC,GAAG,WAAW,IAAI,CAAC,GAAG,YACnD,IAAI,CAAC,IAAI,aAAa,CAAC;YAC7B,CAAC;YAED,YAAY,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAEzE,IAAI,cAAc;gBAChB,OAAO,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAM,CAAC,cAAc,CAAC,CAAC;YACrE,CAAC;SACF;QACD,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAM,CAAC,UAAW,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QACzD,MAAM,CAAC,KAAK,CAAE,EAAE,CAAC,KAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC/C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAM,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;QACtD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACpC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC;QAChB,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;QACf,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAM,CAAC,UAAW,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QACxD,MAAM,CAAC,KAAK,CAAE,EAAE,CAAC,KAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAM,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;QACrD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {\n  html,\n  LitElement,\n  property,\n  PropertyDeclarations,\n  PropertyValues\n} from '../lit-element.js';\n\nimport {\n  generateElementName,\n  stripExpressionDelimeters\n} from './test-helpers.js';\n\nconst assert = chai.assert;\n\nsuite('LitElement', () => {\n  let container: HTMLElement;\n\n  setup(() => {\n    container = document.createElement('div');\n    document.body.appendChild(container);\n  });\n\n  teardown(() => {\n    if (container && container.parentNode) {\n      container.parentNode.removeChild(container);\n    }\n  });\n\n  test('renders initial content into shadowRoot', async () => {\n    const rendered = `hello world`;\n    const name = generateElementName();\n    customElements.define(name, class extends LitElement {\n      render() { return html`${rendered}`; }\n    });\n    const el = document.createElement(name);\n    container.appendChild(el);\n    await new Promise((resolve) => {\n      setTimeout(() => {\n        assert.ok(el.shadowRoot);\n        assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML),\n                     rendered);\n        resolve();\n      });\n    });\n  });\n\n  test('`requestUpdate` waits until update/rendering', async () => {\n    class E extends LitElement {\n      updateCount = 0;\n      render() { return html`${++this.updateCount}`; }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.requestUpdate();\n    assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), '1');\n    await el.requestUpdate();\n    assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), '2');\n    await el.requestUpdate();\n    assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), '3');\n  });\n\n  test(\n      '`updateComplete` waits for `requestUpdate` but does not trigger update, async',\n      async () => {\n        class E extends LitElement {\n          updateCount = 0;\n          render() { return html`${++this.updateCount}`; }\n        }\n        customElements.define(generateElementName(), E);\n        const el = new E();\n        container.appendChild(el);\n        await el.updateComplete;\n        assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), '1');\n        await el.updateComplete;\n        assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), '1');\n        el.requestUpdate();\n        await el.updateComplete;\n        assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), '2');\n        await el.updateComplete;\n        assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), '2');\n      });\n\n  test('`shouldUpdate` controls update/rendering', async () => {\n    class E extends LitElement {\n\n      needsUpdate = true;\n      updateCount = 0;\n\n      shouldUpdate() { return this.needsUpdate; }\n\n      render() { return html`${++this.updateCount}`; }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), '1');\n    el.needsUpdate = false;\n    await el.requestUpdate();\n    assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), '1');\n    el.needsUpdate = true;\n    await el.requestUpdate();\n    assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), '2');\n    await el.requestUpdate();\n    assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), '3');\n  });\n\n  test('can set render target to light dom', async () => {\n    const rendered = `hello world`;\n    const name = generateElementName();\n    customElements.define(name, class extends LitElement {\n      render() { return html`${rendered}`; }\n\n      createRenderRoot() { return this; }\n    });\n    const el = document.createElement(name);\n    container.appendChild(el);\n    await (el as LitElement).updateComplete;\n    assert.notOk(el.shadowRoot);\n    assert.equal(stripExpressionDelimeters(el.innerHTML), rendered);\n  });\n\n  test('renders when created via constructor', async () => {\n    const rendered = `hello world`;\n    class E extends LitElement {\n      render() { return html`${rendered}`; }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.ok(el.shadowRoot);\n    assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), rendered);\n  });\n\n  test('property options', async () => {\n    const hasChanged = (value: any, old: any) =>\n        old === undefined || value > old;\n    const fromAttribute = (value: any) => parseInt(value);\n    const toAttribute = (value: any) => `${value}-attr`;\n    class E extends LitElement {\n      static get properties() {\n        return {\n          noAttr : {attribute : false},\n          atTr : {attribute : true},\n          customAttr : {attribute : 'custom', reflect : true},\n          hasChanged : {hasChanged},\n          fromAttribute : {type : fromAttribute},\n          toAttribute : {reflect : true, type : {toAttribute}},\n          all : {\n            attribute : 'all-attr',\n            hasChanged,\n            type : {fromAttribute, toAttribute},\n            reflect : true\n          },\n        };\n      }\n\n      noAttr = 'noAttr';\n      atTr = 'attr';\n      customAttr = 'customAttr';\n      hasChanged = 10;\n      fromAttribute = 1;\n      toAttribute = 1;\n      all = 10;\n\n      updateCount = 0;\n\n      update(changed: PropertyValues) {\n        this.updateCount++;\n        super.update(changed);\n      }\n\n      render() { return html``; }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.equal(el.updateCount, 1);\n    assert.equal(el.noAttr, 'noAttr');\n    assert.equal(el.atTr, 'attr');\n    assert.equal(el.customAttr, 'customAttr');\n    assert.equal(el.hasChanged, 10);\n    assert.equal(el.fromAttribute, 1);\n    assert.equal(el.toAttribute, 1);\n    assert.equal(el.getAttribute('toattribute'), '1-attr');\n    assert.equal(el.all, 10);\n    assert.equal(el.getAttribute('all-attr'), '10-attr');\n    el.setAttribute('noattr', 'noAttr2');\n    el.setAttribute('attr', 'attr2');\n    el.setAttribute('custom', 'customAttr2');\n    el.setAttribute('fromattribute', '2attr');\n    el.toAttribute = 2;\n    el.all = 5;\n    await el.updateComplete;\n    assert.equal(el.updateCount, 2);\n    assert.equal(el.noAttr, 'noAttr');\n    assert.equal(el.atTr, 'attr2');\n    assert.equal(el.customAttr, 'customAttr2');\n    assert.equal(el.fromAttribute, 2);\n    assert.equal(el.toAttribute, 2);\n    assert.equal(el.getAttribute('toattribute'), '2-attr');\n    assert.equal(el.all, 5);\n    el.all = 15;\n    await el.updateComplete;\n    assert.equal(el.updateCount, 3);\n    assert.equal(el.all, 15);\n    assert.equal(el.getAttribute('all-attr'), '15-attr');\n    el.setAttribute('all-attr', '16-attr');\n    await el.updateComplete;\n    assert.equal(el.updateCount, 4);\n    assert.equal(el.getAttribute('all-attr'), '16-attr');\n    assert.equal(el.all, 16);\n    el.hasChanged = 5;\n    await el.updateComplete;\n    assert.equal(el.hasChanged, 5);\n    assert.equal(el.updateCount, 4);\n    el.hasChanged = 15;\n    await el.updateComplete;\n    assert.equal(el.hasChanged, 15);\n    assert.equal(el.updateCount, 5);\n    el.setAttribute('all-attr', '5-attr');\n    await el.updateComplete;\n    assert.equal(el.all, 5);\n    assert.equal(el.updateCount, 5);\n    el.all = 15;\n    await el.updateComplete;\n    assert.equal(el.all, 15);\n    assert.equal(el.updateCount, 6);\n  });\n\n  test('property options via decorator', async () => {\n    const hasChanged = (value: any, old: any) =>\n        old === undefined || value > old;\n    const fromAttribute = (value: any) => parseInt(value);\n    const toAttribute = (value: any) => `${value}-attr`;\n    class E extends LitElement {\n\n      @property({attribute : false}) noAttr = 'noAttr';\n      @property({attribute : true}) atTr = 'attr';\n      @property({attribute : 'custom', reflect: true})\n      customAttr = 'customAttr';\n      @property({hasChanged}) hasChanged = 10;\n      @property({type : fromAttribute}) fromAttribute = 1;\n      @property({reflect : true, type: {toAttribute}}) toAttribute = 1;\n      @property({\n        attribute : 'all-attr',\n        hasChanged,\n        type: {fromAttribute, toAttribute},\n        reflect: true\n      })\n      all = 10;\n\n      updateCount = 0;\n\n      update(changed: PropertyValues) {\n        this.updateCount++;\n        super.update(changed);\n      }\n\n      render() { return html``; }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.equal(el.updateCount, 1);\n    assert.equal(el.noAttr, 'noAttr');\n    assert.equal(el.atTr, 'attr');\n    assert.equal(el.customAttr, 'customAttr');\n    assert.equal(el.hasChanged, 10);\n    assert.equal(el.fromAttribute, 1);\n    assert.equal(el.toAttribute, 1);\n    assert.equal(el.getAttribute('toattribute'), '1-attr');\n    assert.equal(el.all, 10);\n    assert.equal(el.getAttribute('all-attr'), '10-attr');\n    el.setAttribute('noattr', 'noAttr2');\n    el.setAttribute('attr', 'attr2');\n    el.setAttribute('custom', 'customAttr2');\n    el.setAttribute('fromattribute', '2attr');\n    el.toAttribute = 2;\n    el.all = 5;\n    await el.updateComplete;\n    assert.equal(el.updateCount, 2);\n    assert.equal(el.noAttr, 'noAttr');\n    assert.equal(el.atTr, 'attr2');\n    assert.equal(el.customAttr, 'customAttr2');\n    assert.equal(el.fromAttribute, 2);\n    assert.equal(el.toAttribute, 2);\n    assert.equal(el.getAttribute('toattribute'), '2-attr');\n    assert.equal(el.all, 5);\n    el.all = 15;\n    await el.updateComplete;\n    assert.equal(el.updateCount, 3);\n    assert.equal(el.all, 15);\n    assert.equal(el.getAttribute('all-attr'), '15-attr');\n    el.setAttribute('all-attr', '16-attr');\n    await el.updateComplete;\n    assert.equal(el.updateCount, 4);\n    assert.equal(el.getAttribute('all-attr'), '16-attr');\n    assert.equal(el.all, 16);\n    el.hasChanged = 5;\n    await el.updateComplete;\n    assert.equal(el.hasChanged, 5);\n    assert.equal(el.updateCount, 4);\n    el.hasChanged = 15;\n    await el.updateComplete;\n    assert.equal(el.hasChanged, 15);\n    assert.equal(el.updateCount, 5);\n    el.setAttribute('all-attr', '5-attr');\n    await el.updateComplete;\n    assert.equal(el.all, 5);\n    assert.equal(el.updateCount, 5);\n    el.all = 15;\n    await el.updateComplete;\n    assert.equal(el.all, 15);\n    assert.equal(el.updateCount, 6);\n  });\n\n  test('can mix property options via decorator and via getter', async () => {\n    const hasChanged = (value: any, old: any) =>\n        old === undefined || value > old;\n    const fromAttribute = (value: any) => parseInt(value);\n    const toAttribute = (value: any) => `${value}-attr`;\n    class E extends LitElement {\n\n      @property({hasChanged}) hasChanged = 10;\n      @property({type : fromAttribute}) fromAttribute = 1;\n      @property({reflect : true, type: {toAttribute}}) toAttribute = 1;\n      @property({\n        attribute : 'all-attr',\n        hasChanged,\n        type: {fromAttribute, toAttribute},\n        reflect: true\n      })\n      all = 10;\n\n      updateCount = 0;\n\n      static get properties() {\n        return {\n          noAttr : {attribute : false},\n          atTr : {attribute : true},\n          customAttr : {attribute : 'custom', reflect : true},\n        };\n      }\n\n      noAttr: string|undefined;\n      atTr: string|undefined;\n      customAttr: string|undefined;\n\n      constructor() {\n        super();\n        this.noAttr = 'noAttr';\n        this.atTr = 'attr';\n        this.customAttr = 'customAttr';\n      }\n\n      update(changed: PropertyValues) {\n        this.updateCount++;\n        super.update(changed);\n      }\n\n      render() { return html``; }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.equal(el.updateCount, 1);\n    assert.equal(el.noAttr, 'noAttr');\n    assert.equal(el.atTr, 'attr');\n    assert.equal(el.customAttr, 'customAttr');\n    assert.equal(el.hasChanged, 10);\n    assert.equal(el.fromAttribute, 1);\n    assert.equal(el.toAttribute, 1);\n    assert.equal(el.getAttribute('toattribute'), '1-attr');\n    assert.equal(el.all, 10);\n    assert.equal(el.getAttribute('all-attr'), '10-attr');\n    el.setAttribute('noattr', 'noAttr2');\n    el.setAttribute('attr', 'attr2');\n    el.setAttribute('custom', 'customAttr2');\n    el.setAttribute('fromattribute', '2attr');\n    el.toAttribute = 2;\n    el.all = 5;\n    await el.updateComplete;\n    assert.equal(el.updateCount, 2);\n    assert.equal(el.noAttr, 'noAttr');\n    assert.equal(el.atTr, 'attr2');\n    assert.equal(el.customAttr, 'customAttr2');\n    assert.equal(el.fromAttribute, 2);\n    assert.equal(el.toAttribute, 2);\n    assert.equal(el.getAttribute('toattribute'), '2-attr');\n    assert.equal(el.all, 5);\n    el.all = 15;\n    await el.updateComplete;\n    assert.equal(el.updateCount, 3);\n    assert.equal(el.all, 15);\n    assert.equal(el.getAttribute('all-attr'), '15-attr');\n    el.setAttribute('all-attr', '16-attr');\n    await el.updateComplete;\n    assert.equal(el.updateCount, 4);\n    assert.equal(el.getAttribute('all-attr'), '16-attr');\n    assert.equal(el.all, 16);\n    el.hasChanged = 5;\n    await el.updateComplete;\n    assert.equal(el.hasChanged, 5);\n    assert.equal(el.updateCount, 4);\n    el.hasChanged = 15;\n    await el.updateComplete;\n    assert.equal(el.hasChanged, 15);\n    assert.equal(el.updateCount, 5);\n    el.setAttribute('all-attr', '5-attr');\n    await el.updateComplete;\n    assert.equal(el.all, 5);\n    assert.equal(el.updateCount, 5);\n    el.all = 15;\n    await el.updateComplete;\n    assert.equal(el.all, 15);\n    assert.equal(el.updateCount, 6);\n  });\n\n  test('attributes deserialize from html', async () => {\n    const fromAttribute = (value: any) => parseInt(value);\n    const toAttributeOnly = (value: any) =>\n        typeof value === 'string' && value.indexOf(`-attr`) > 0\n            ? value\n            : `${value}-attr`;\n    const toAttribute = (value: any) => `${value}-attr`;\n    class E extends LitElement {\n      static get properties() {\n        return {\n          noAttr : {attribute : false},\n          atTr : {attribute : true},\n          customAttr : {attribute : 'custom', reflect : true},\n          fromAttribute : {type : fromAttribute},\n          toAttribute :\n              {reflect : true, type : {toAttribute : toAttributeOnly}},\n          all : {\n            attribute : 'all-attr',\n            type : {fromAttribute, toAttribute},\n            reflect : true\n          },\n        };\n      }\n\n      noAttr = 'noAttr';\n      atTr = 'attr';\n      customAttr = 'customAttr';\n      fromAttribute = 1;\n      toAttribute: string|number = 1;\n      all = 10;\n\n      render() { return html``; }\n    }\n    const name = generateElementName();\n    customElements.define(name, E);\n    container.innerHTML = `<${name}\n      noattr=\"1\"\n      attr=\"2\"\n      custom=\"3\"\n      fromAttribute=\"6-attr\"\n      toAttribute=\"7\"\n      all-attr=\"11-attr\"></${name}>`;\n    const el = container.firstChild as E;\n    await el.updateComplete;\n    assert.equal(el.noAttr, 'noAttr');\n    assert.equal(el.getAttribute('noattr'), '1');\n    assert.equal(el.atTr, '2');\n    assert.equal(el.customAttr, '3');\n    assert.equal(el.getAttribute('custom'), '3');\n    assert.equal(el.fromAttribute, 6);\n    assert.equal(el.toAttribute, '7');\n    assert.equal(el.getAttribute('toattribute'), '7-attr');\n    assert.equal(el.all, 11);\n    assert.equal(el.getAttribute('all-attr'), '11-attr');\n  });\n\n  if (Object.getOwnPropertySymbols) {\n    test('properties defined using symbols', async () => {\n      const zug = Symbol();\n\n      class E extends LitElement {\n\n        static get properties() { return {foo : {}, [zug] : {}}; }\n        updateCount = 0;\n        foo = 5;\n        [zug] = 6;\n\n        render() { return html``; }\n\n        update(changedProperties: PropertyValues) {\n          this.updateCount++;\n          super.update(changedProperties);\n        }\n      }\n      customElements.define(generateElementName(), E);\n      const el = new E();\n      container.appendChild(el);\n      await el.updateComplete;\n      assert.equal(el.updateCount, 1);\n      assert.equal(el.foo, 5);\n      assert.equal(el[zug], 6);\n      el.foo = 55;\n      await el.updateComplete;\n      assert.equal(el.updateCount, 2);\n      assert.equal(el.foo, 55);\n      assert.equal(el[zug], 6);\n      el[zug] = 66;\n      await el.updateComplete;\n      assert.equal(el.updateCount, 3);\n      assert.equal(el.foo, 55);\n      assert.equal(el[zug], 66);\n    });\n\n    test('properties as symbols can set property options', async () => {\n      const zug = Symbol();\n\n      class E extends LitElement {\n\n        static get properties() {\n          return {\n            [zug] : {\n              attribute : 'zug',\n              reflect : true,\n              type : (value: string) => Number(value) + 100\n            }\n          };\n        }\n\n        constructor() {\n          super();\n          (this as any)[zug] = 5;\n        }\n\n        render() { return html``; }\n      }\n      customElements.define(generateElementName(), E);\n      const el = new E() as any;\n      container.appendChild(el);\n      await el.updateComplete;\n      assert.equal(el[zug], 5);\n      assert.equal(el.getAttribute('zug'), '5');\n      el[zug] = 6;\n      await el.updateComplete;\n      assert.equal(el[zug], 6);\n      assert.equal(el.getAttribute('zug'), '6');\n      el.setAttribute('zug', '7');\n      await el.updateComplete;\n      assert.equal(el.getAttribute('zug'), '107');\n      assert.equal(el[zug], 107);\n    });\n  }\n\n  test('property options compose when subclassing', async () => {\n    const hasChanged = (value: any, old: any) =>\n        old === undefined || value > old;\n    const fromAttribute = (value: any) => parseInt(value);\n    const toAttribute = (value: any) => `${value}-attr`;\n    class E extends LitElement {\n      static get properties(): PropertyDeclarations {\n        return {\n          noAttr : {attribute : false},\n          atTr : {attribute : true},\n          customAttr : {},\n          hasChanged : {},\n        };\n      }\n\n      noAttr = 'noAttr';\n      atTr = 'attr';\n      customAttr = 'customAttr';\n      hasChanged = 10;\n\n      updateCount = 0;\n\n      update(changed: PropertyValues) {\n        this.updateCount++;\n        super.update(changed);\n      }\n\n      render() { return html``; }\n    }\n    customElements.define(generateElementName(), E);\n\n    class F extends E {\n      static get properties(): PropertyDeclarations {\n        return {\n          customAttr : {attribute : 'custom', reflect : true},\n          hasChanged : {hasChanged},\n          fromAttribute : {},\n          toAttribute : {},\n        };\n      }\n\n      fromAttribute = 1;\n      toAttribute = 1;\n      all = 10;\n    }\n\n    class G extends F {\n      static get properties(): PropertyDeclarations {\n        return {\n          fromAttribute : {type : fromAttribute},\n          toAttribute : {reflect : true, type : {toAttribute}},\n          all : {\n            attribute : 'all-attr',\n            hasChanged,\n            type : {fromAttribute, toAttribute},\n            reflect : true\n          },\n        };\n      }\n    }\n\n    customElements.define(generateElementName(), G);\n\n    const el = new G();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.equal(el.updateCount, 1);\n    assert.equal(el.noAttr, 'noAttr');\n    assert.equal(el.atTr, 'attr');\n    assert.equal(el.customAttr, 'customAttr');\n    assert.equal(el.hasChanged, 10);\n    assert.equal(el.fromAttribute, 1);\n    assert.equal(el.toAttribute, 1);\n    assert.equal(el.getAttribute('toattribute'), '1-attr');\n    assert.equal(el.all, 10);\n    assert.equal(el.getAttribute('all-attr'), '10-attr');\n    el.setAttribute('noattr', 'noAttr2');\n    el.setAttribute('attr', 'attr2');\n    el.setAttribute('custom', 'customAttr2');\n    el.setAttribute('fromattribute', '2attr');\n    el.toAttribute = 2;\n    el.all = 5;\n    await el.updateComplete;\n    assert.equal(el.updateCount, 2);\n    assert.equal(el.noAttr, 'noAttr');\n    assert.equal(el.atTr, 'attr2');\n    assert.equal(el.customAttr, 'customAttr2');\n    assert.equal(el.fromAttribute, 2);\n    assert.equal(el.toAttribute, 2);\n    assert.equal(el.getAttribute('toattribute'), '2-attr');\n    assert.equal(el.all, 5);\n    el.all = 15;\n    await el.updateComplete;\n    assert.equal(el.updateCount, 3);\n    assert.equal(el.all, 15);\n    assert.equal(el.getAttribute('all-attr'), '15-attr');\n    el.setAttribute('all-attr', '16-attr');\n    await el.updateComplete;\n    assert.equal(el.updateCount, 4);\n    assert.equal(el.getAttribute('all-attr'), '16-attr');\n    assert.equal(el.all, 16);\n    el.hasChanged = 5;\n    await el.updateComplete;\n    assert.equal(el.hasChanged, 5);\n    assert.equal(el.updateCount, 4);\n    el.hasChanged = 15;\n    await el.updateComplete;\n    assert.equal(el.hasChanged, 15);\n    assert.equal(el.updateCount, 5);\n    el.setAttribute('all-attr', '5-attr');\n    await el.updateComplete;\n    assert.equal(el.all, 5);\n    assert.equal(el.updateCount, 5);\n    el.all = 15;\n    await el.updateComplete;\n    assert.equal(el.all, 15);\n    assert.equal(el.updateCount, 6);\n  });\n\n  test('superclass properties not affected by subclass', async () => {\n    class E extends LitElement {\n      static get properties(): PropertyDeclarations {\n        return {\n          foo : {attribute : 'zug', reflect : true},\n          bar : {reflect : true}\n        };\n      }\n\n      foo = 5;\n      bar = 'bar';\n\n      render() { return html``; }\n    }\n    customElements.define(generateElementName(), E);\n\n    class F extends E {\n      static get properties(): PropertyDeclarations {\n        return {foo : {attribute : false}, nug : {}};\n      }\n\n      foo = 6;\n      bar = 'subbar';\n      nug = 5;\n\n      render() { return html``; }\n    }\n    customElements.define(generateElementName(), F);\n\n    const el = new E();\n    const sub = new F();\n    container.appendChild(el);\n    await el.updateComplete;\n    container.appendChild(sub);\n    await sub.updateComplete;\n\n    assert.equal(el.foo, 5);\n    assert.equal(el.getAttribute('zug'), '5');\n    assert.isFalse(el.hasAttribute('foo'));\n    assert.equal(el.bar, 'bar');\n    assert.equal(el.getAttribute('bar'), 'bar');\n    assert.isUndefined((el as any).nug);\n\n    assert.equal(sub.foo, 6);\n    assert.isFalse(sub.hasAttribute('zug'));\n    assert.isFalse(sub.hasAttribute('foo'));\n    assert.equal(sub.bar, 'subbar');\n    assert.equal(sub.getAttribute('bar'), 'subbar');\n    assert.equal(sub.nug, 5);\n  });\n\n  test('Attributes reflect', async () => {\n    const suffix = '-reflected';\n    class E extends LitElement {\n      static get properties() {\n        return {\n          foo : {\n            reflect : true,\n            type : {toAttribute : (value: any) => `${value}${suffix}`}\n          }\n        };\n      }\n\n      foo = 0;\n\n      render() { return html``; }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.equal(el.getAttribute('foo'), `0${suffix}`);\n    el.foo = 5;\n    await el.updateComplete;\n    assert.equal(el.getAttribute('foo'), `5${suffix}`);\n  });\n\n  test('Attributes reflect with type: Boolean', async () => {\n    class E extends LitElement {\n      static get properties() {\n        return {bar : {type : Boolean, reflect : true}};\n      }\n\n      bar = true;\n\n      render() { return html``; }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.equal(el.getAttribute('bar'), '');\n    el.bar = false;\n    await el.updateComplete;\n    assert.equal(el.hasAttribute('bar'), false);\n    el.bar = true;\n    await el.updateComplete;\n    assert.equal(el.getAttribute('bar'), '');\n  });\n\n  test('updates/renders when properties change', async () => {\n    class E extends LitElement {\n      static get properties() { return {foo : {}}; }\n\n      foo = 'one';\n\n      render() { return html`${this.foo}`; }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    assert.ok(el.shadowRoot);\n    await el.updateComplete;\n    assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), 'one');\n    el.foo = 'changed';\n    await el.updateComplete;\n    assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML),\n                 'changed');\n  });\n\n  test('updates/renders when properties and attributes change', async () => {\n    class E extends LitElement {\n      static get properties() { return {value : {}, attrValue : {}}; }\n\n      value = '1';\n      attrValue = 'attr';\n\n      updateCountValue = '';\n      updateCountAttrValue = '';\n\n      render() { return html``; }\n\n      update(props: PropertyValues) {\n        super.update(props);\n        this.updateCountValue = this.value;\n        this.updateCountAttrValue = this.attrValue;\n      }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    assert.ok(el.shadowRoot);\n    await el.updateComplete;\n    assert.equal(el.updateCountValue, '1');\n    assert.equal(el.updateCountAttrValue, 'attr');\n    el.value = '2';\n    await el.updateComplete;\n    assert.equal(el.updateCountValue, '2');\n    assert.equal(el.updateCountAttrValue, 'attr');\n    el.attrValue = 'attr2';\n    await el.updateComplete;\n    assert.equal(el.updateCountValue, '2');\n    assert.equal(el.updateCountAttrValue, 'attr2');\n    el.setAttribute('attrvalue', 'attr3');\n    await el.updateComplete;\n    assert.equal(el.updateCountValue, '2');\n    assert.equal(el.updateCountAttrValue, 'attr3');\n    el.value = '3';\n    el.setAttribute('attrvalue', 'attr4');\n    await el.updateComplete;\n    assert.equal(el.updateCountValue, '3');\n    assert.equal(el.updateCountAttrValue, 'attr4');\n  });\n\n  test('updates/renders changes when attributes change', async () => {\n    class E extends LitElement {\n      static get properties() { return {foo : {}}; }\n\n      foo = 'one';\n\n      render() { return html`${this.foo}`; }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.ok(el.shadowRoot);\n    assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), 'one');\n    el.setAttribute('foo', 'changed');\n    await el.updateComplete;\n    assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML),\n                 'changed');\n  });\n\n  test('User defined accessor can trigger update/render', async () => {\n    class E extends LitElement {\n      __bar?: number;\n\n      static get properties() { return {foo : {}, bar : {}}; }\n\n      info: string[] = [];\n      foo = 0;\n\n      get bar() { return this.__bar; }\n\n      set bar(value) {\n        const old = this.bar;\n        this.__bar = Number(value);\n        this.requestUpdate('bar', old);\n      }\n\n      render() {\n        this.info.push('render');\n        return html`${this.foo}${this.bar}`;\n      }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    el.setAttribute('bar', '20');\n    await el.updateComplete;\n    assert.equal(el.bar, 20);\n    assert.equal(el.__bar, 20);\n    assert.equal(stripExpressionDelimeters(el.shadowRoot!.innerHTML), '020');\n  });\n\n  test('User defined accessor can use property options via `requestUpdate`',\n       async () => {\n         const fromAttribute = (value: any) => parseInt(value);\n         const toAttribute = (value: any) => `${value}-attr`;\n         const hasChanged = (value: any, old: any) => isNaN(old) || value > old;\n         class E extends LitElement {\n\n           updateCount = 0;\n           __bar: any;\n\n           static get properties() {\n             return {\n               bar : {\n                 attribute : 'attr-bar',\n                 reflect : true,\n                 type : {fromAttribute, toAttribute},\n                 hasChanged\n               }\n             };\n           }\n\n           constructor() {\n             super();\n             this.bar = 5;\n           }\n\n           update(changed: PropertyValues) {\n             super.update(changed);\n             this.updateCount++;\n           }\n\n           get bar() { return this.__bar; }\n\n           set bar(value) {\n             const old = this.bar;\n             this.__bar = Number(value);\n             this.requestUpdate('bar', old);\n           }\n\n           render() { return html``; }\n         }\n         customElements.define(generateElementName(), E);\n         const el = new E();\n         container.appendChild(el);\n         await el.updateComplete;\n         assert.equal(el.updateCount, 1);\n         assert.equal(el.bar, 5);\n         assert.equal(el.getAttribute('attr-bar'), `5-attr`);\n         el.setAttribute('attr-bar', '7');\n         await el.updateComplete;\n         assert.equal(el.updateCount, 2);\n         assert.equal(el.bar, 7);\n         assert.equal(el.getAttribute('attr-bar'), `7-attr`);\n         el.bar = 4;\n         await el.updateComplete;\n         assert.equal(el.updateCount, 2);\n         assert.equal(el.bar, 4);\n         assert.equal(el.getAttribute('attr-bar'), `7-attr`);\n         el.setAttribute('attr-bar', '3');\n         await el.updateComplete;\n         assert.equal(el.updateCount, 2);\n         assert.equal(el.bar, 3);\n         assert.equal(el.getAttribute('attr-bar'), `3`);\n       });\n\n  test(\n      'updates/renders attributes, properties, and event listeners via `lit-html`',\n      async () => {\n        class E extends LitElement {\n          _event?: Event;\n\n          render() {\n            const attr = 'attr';\n            const prop = 'prop';\n            const event = (e: Event) => { this._event = e; };\n            return html\n            `<div attr=\"${attr}\" .prop=\"${prop}\" @zug=\"${event}\"></div>`;\n          }\n        }\n        customElements.define(generateElementName(), E);\n        const el = new E();\n        container.appendChild(el);\n        await el.updateComplete;\n        const d = el.shadowRoot!.querySelector('div')!;\n        assert.equal(d.getAttribute('attr'), 'attr');\n        assert.equal((d as any).prop, 'prop');\n        const e = new Event('zug');\n        d.dispatchEvent(e);\n        assert.equal(el._event, e);\n      });\n\n  test('`firstUpdated` called when element first updates', async () => {\n    class E extends LitElement {\n\n      @property() foo = 1;\n\n      wasUpdatedCount = 0;\n      wasFirstUpdated = 0;\n      changedProperties: PropertyValues|undefined;\n\n      update(changedProperties: PropertyValues) {\n        this.wasUpdatedCount++;\n        super.update(changedProperties);\n      }\n\n      render() { return html``; }\n\n      firstUpdated(changedProperties: PropertyValues) {\n        this.changedProperties = changedProperties;\n        this.wasFirstUpdated++;\n      }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    const testMap = new Map();\n    testMap.set('foo', undefined);\n    assert.deepEqual(el.changedProperties, testMap);\n    assert.equal(el.wasUpdatedCount, 1);\n    assert.equal(el.wasFirstUpdated, 1);\n    await el.requestUpdate();\n    assert.equal(el.wasUpdatedCount, 2);\n    assert.equal(el.wasFirstUpdated, 1);\n    await el.requestUpdate();\n    assert.equal(el.wasUpdatedCount, 3);\n    assert.equal(el.wasFirstUpdated, 1);\n  });\n\n  test(\n      '`firstUpdated` called when element first updates even if first `shouldUpdate` returned false',\n      async () => {\n        class E extends LitElement {\n\n          @property() foo = 1;\n\n          triedToUpdatedCount = 0;\n          wasUpdatedCount = 0;\n          wasFirstUpdated = 0;\n          changedProperties: PropertyValues|undefined;\n\n          shouldUpdate() {\n            this.triedToUpdatedCount++;\n            return this.triedToUpdatedCount > 1;\n          }\n\n          update(changedProperties: PropertyValues) {\n            this.wasUpdatedCount++;\n            super.update(changedProperties);\n          }\n\n          render() { return html``; }\n\n          firstUpdated(changedProperties: PropertyValues) {\n            this.changedProperties = changedProperties;\n            this.wasFirstUpdated++;\n          }\n        }\n\n        customElements.define(generateElementName(), E);\n        const el = new E();\n        container.appendChild(el);\n        await el.updateComplete;\n        assert.equal(el.triedToUpdatedCount, 1);\n        assert.equal(el.wasUpdatedCount, 0);\n        assert.equal(el.wasFirstUpdated, 0);\n        await el.requestUpdate();\n        const testMap = new Map();\n        assert.deepEqual(el.changedProperties, testMap);\n        assert.equal(el.triedToUpdatedCount, 2);\n        assert.equal(el.wasUpdatedCount, 1);\n        assert.equal(el.wasFirstUpdated, 1);\n        await el.requestUpdate();\n        assert.equal(el.triedToUpdatedCount, 3);\n        assert.equal(el.wasUpdatedCount, 2);\n        assert.equal(el.wasFirstUpdated, 1);\n      });\n\n  test('render lifecycle order', async () => {\n    class E extends LitElement {\n      static get properties() { return {foo : {type : Number}}; }\n\n      info: Array<string> = [];\n\n      shouldUpdate() {\n        this.info.push('shouldUpdate');\n        return true;\n      }\n\n      render() {\n        this.info.push('render');\n        return html`hi`;\n      }\n\n      update(props: PropertyValues) {\n        this.info.push('before-update');\n        super.update(props);\n        this.info.push('after-update');\n      }\n\n      firstUpdated() { this.info.push('firstUpdated'); }\n\n      updated() { this.info.push('updated'); }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    el.info.push('updateComplete');\n    assert.deepEqual(el.info, [\n      'shouldUpdate', 'before-update', 'render', 'after-update', 'firstUpdated',\n      'updated', 'updateComplete'\n    ]);\n  });\n\n  test('setting properties in update does not trigger update', async () => {\n    class E extends LitElement {\n\n      static get properties() { return {foo : {}}; }\n      promiseFulfilled = false;\n      foo = 0;\n      updateCount = 0;\n\n      update(props: PropertyValues) {\n        this.updateCount++;\n        this.foo++;\n        super.update(props);\n      }\n\n      render() { return html`${this.foo}`; }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.equal(el.foo, 1);\n    assert.equal(el.updateCount, 1);\n    assert.equal(el.shadowRoot!.textContent, '1');\n    el.foo = 5;\n    await el.updateComplete;\n    assert.equal(el.foo, 6);\n    assert.equal(el.updateCount, 2);\n    assert.equal(el.shadowRoot!.textContent, '6');\n  });\n\n  test(\n      'setting properties in update reflects to attribute and is included in `changedProperties`',\n      async () => {\n        class E extends LitElement {\n\n          static get properties() {\n            return {foo : {}, bar : {}, zot : {reflect : true}};\n          }\n\n          changedProperties: PropertyValues|undefined = undefined;\n\n          update(changedProperties: PropertyValues) {\n            (this as any).zot = (this as any).foo + (this as any).bar;\n            super.update(changedProperties);\n            this.changedProperties = changedProperties;\n          }\n\n          render() { return html``; }\n        }\n        customElements.define(generateElementName(), E);\n        const el = new E() as any;\n        container.appendChild(el);\n        await el.updateComplete;\n        const testMap = new Map();\n        testMap.set('zot', undefined);\n        assert.deepEqual(el.changedProperties, testMap);\n        assert.isNaN(el.zot);\n        assert.equal(el.getAttribute('zot'), 'NaN');\n        el.bar = 1;\n        el.foo = 1;\n        await el.updateComplete;\n        assert.equal(el.foo, 1);\n        assert.equal(el.bar, 1);\n        assert.equal(el.zot, 2);\n        testMap.clear();\n        testMap.set('foo', undefined);\n        testMap.set('bar', undefined);\n        testMap.set('zot', NaN);\n        assert.deepEqual(el.changedProperties, testMap);\n        assert.equal(el.getAttribute('zot'), '2');\n        el.bar = 2;\n        await el.updateComplete;\n        assert.equal(el.bar, 2);\n        assert.equal(el.zot, 3);\n        testMap.clear();\n        testMap.set('bar', 1);\n        testMap.set('zot', 2);\n        assert.deepEqual(el.changedProperties, testMap);\n        assert.equal(el.getAttribute('zot'), '3');\n      });\n\n  // Note, on older browsers (e.g. old Safari/Chrome), native properties\n  // cannot have default values. These will be overwritten by instance values.\n  test('can make properties for native accessors', async () => {\n    class E extends LitElement {\n\n      static get properties() {\n        return {\n          id : {reflect : true},\n          name : {reflect : true},\n          title : {reflect : true},\n          foo : {}\n        };\n      }\n\n      name: string|undefined;\n      foo = '';\n\n      changedProperties: PropertyValues|undefined = undefined;\n\n      update(changedProperties: PropertyValues) {\n        (this as any).zot = (this as any).foo + (this as any).bar;\n        super.update(changedProperties);\n        this.changedProperties = changedProperties;\n      }\n\n      render() {\n        return html`${this.id}-${this.name}-${this.title}-${this.foo}`;\n      }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E() as any;\n    container.appendChild(el);\n    await el.updateComplete;\n    el.foo = 'foo';\n    el.id = 'id';\n    el.name = 'name';\n    el.title = 'title';\n    await el.updateComplete;\n    assert.equal(el.shadowRoot!.textContent, 'id-name-title-foo');\n    assert.equal((window as any).id, el);\n    el.id = 'id2';\n    el.name = 'name2';\n    await el.updateComplete;\n    assert.equal(el.shadowRoot!.textContent, 'id2-name2-title-foo');\n    assert.equal((window as any).id2, el);\n  });\n\n  test(\n      'setting properties in `updated` does trigger update and does not block updateComplete',\n      async () => {\n        class E extends LitElement {\n\n          static get properties() { return {foo : {}}; }\n          foo = 0;\n          updateCount = 0;\n          fooMax = 2;\n\n          update(changed: PropertyValues) {\n            this.updateCount++;\n            super.update(changed);\n          }\n\n          updated() {\n            if (this.foo < this.fooMax) {\n              this.foo++;\n            }\n          }\n\n          render() { return html``; }\n        }\n        customElements.define(generateElementName(), E);\n        const el = new E();\n        container.appendChild(el);\n        let result = await el.updateComplete;\n        assert.isFalse(result);\n        assert.equal(el.foo, 1);\n        assert.equal(el.updateCount, 1);\n        result = await el.updateComplete;\n        assert.isFalse(result);\n        assert.equal(el.foo, 2);\n        assert.equal(el.updateCount, 2);\n        result = await el.updateComplete;\n        assert.isTrue(result);\n      });\n\n  test(\n      'setting properties in `updated` can await until updateComplete returns true',\n      async () => {\n        class E extends LitElement {\n\n          static get properties() { return {foo : {}}; }\n          foo = 0;\n          updateCount = 0;\n\n          update(changed: PropertyValues) {\n            this.updateCount++;\n            super.update(changed);\n          }\n\n          updated() {\n            if (this.foo < 10) {\n              this.foo++;\n            }\n          }\n\n          render() { return html``; }\n        }\n        customElements.define(generateElementName(), E);\n        const el = new E();\n        container.appendChild(el);\n        while (!await el.updateComplete) {\n        }\n        assert.equal(el.foo, 10);\n      });\n\n  test('`updateComplete` can block properties set in `updated`', async () => {\n    class E extends LitElement {\n\n      static get properties() { return {foo : {}}; }\n      foo = 1;\n      updateCount = 0;\n      fooMax = 10;\n\n      update(changed: PropertyValues) {\n        this.updateCount++;\n        super.update(changed);\n      }\n\n      updated() {\n        if (this.foo < this.fooMax) {\n          this.foo++;\n        }\n      }\n\n      render() { return html``; }\n\n      get updateComplete(): Promise<any> {\n        return super.updateComplete.then((v) => v || this.updateComplete);\n      }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    const result = await el.updateComplete;\n    assert.isTrue(result);\n    assert.equal(el.foo, 10);\n    assert.equal(el.updateCount, 10);\n  });\n\n  test('can await promise in `updateComplete`', async () => {\n    class E extends LitElement {\n\n      static get properties() { return {foo : {}}; }\n      promiseFulfilled = false;\n      foo = 0;\n\n      render() { return html`${this.foo}`; }\n\n      get updateComplete() {\n        return (async () => {\n          return await super.updateComplete && await new Promise((resolve) => {\n                   setTimeout(() => {\n                     this.promiseFulfilled = true;\n                     resolve(true);\n                   }, 1);\n                 });\n        })();\n      }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    const result = await el.updateComplete;\n    assert.isTrue(result);\n    assert.isTrue(el.promiseFulfilled);\n  });\n\n  test('`requestUpdate` resolved at `updateComplete` time', async () => {\n    class E extends LitElement {\n\n      static get properties() { return {foo : {}}; }\n      promiseFulfilled = false;\n      foo = 0;\n\n      render() { return html`${this.foo}`; }\n\n      get updateComplete() {\n        return (async () => {\n          return await super.updateComplete && await new Promise((resolve) => {\n                   setTimeout(() => {\n                     this.promiseFulfilled = true;\n                     resolve(true);\n                   }, 1);\n                 });\n        })();\n      }\n    }\n    customElements.define(generateElementName(), E);\n    const el = new E();\n    container.appendChild(el);\n    let result = await el.updateComplete;\n    assert.isTrue(result);\n    assert.isTrue(el.promiseFulfilled);\n    el.promiseFulfilled = false;\n    result = await el.requestUpdate() as boolean;\n    assert.isTrue(result);\n    assert.isTrue(el.promiseFulfilled);\n  });\n\n  test('can await sub-element `updateComplete`', async () => {\n    class E extends LitElement {\n\n      static get properties() { return {foo : {}}; }\n      promiseFulfilled = false;\n      foo = 'hi';\n\n      render() { return html`${this.foo}`; }\n\n      get updateComplete() {\n        return super.updateComplete.then(\n            () => new Promise((resolve) => setTimeout(() => {\n                                this.promiseFulfilled = true;\n                                resolve(true);\n                              }, 1)));\n      }\n    }\n    customElements.define('x-1224', E);\n\n    class F extends LitElement {\n\n      inner: E|null = null;\n\n      render() { return html`<x-1224></x-1224>`; }\n\n      firstUpdated() { this.inner = this.shadowRoot!.querySelector('x-1224'); }\n\n      get updateComplete() {\n        return super.updateComplete.then(() => {\n          this.inner!.foo = 'yo';\n          return this.inner!.updateComplete;\n        });\n      }\n    }\n    customElements.define(generateElementName(), F);\n    const el = new F();\n    container.appendChild(el);\n    const result = await el.updateComplete;\n    assert.isTrue(result);\n    assert.equal(el.inner!.shadowRoot!.textContent, 'yo');\n    assert.isTrue(el.inner!.promiseFulfilled);\n  });\n\n  test('properties set before upgrade are applied', async () => {\n    const name = generateElementName();\n    const el = document.createElement(name);\n    container.appendChild(el);\n    (el as any).foo = 'hi';\n    (el as any).bar = false;\n    const objectValue = {};\n    (el as any).zug = objectValue;\n    class E extends LitElement {\n      static get properties() { return {foo : {}, bar : {}, zug : {}}; }\n\n      foo = '';\n      bar = true;\n      zug = null;\n\n      render() { return html`test`; }\n    }\n    customElements.define(name, E);\n    await (el as LitElement).updateComplete;\n    assert.equal((el as any).foo, 'hi');\n    assert.equal((el as any).bar, false);\n    assert.equal((el as any).zug, objectValue);\n  });\n\n  test('can set properties and attributes on sub-element', async () => {\n    class E extends LitElement {\n\n      static get properties() {\n        return {foo : {}, attr : {}, bool : {type : Boolean}};\n      }\n      foo = 'hi';\n      bool = false;\n\n      render() { return html`${this.foo}`; }\n    }\n    customElements.define('x-2448', E);\n\n    class F extends LitElement {\n\n      inner: E|null = null;\n\n      static get properties() { return {bar : {}, bool : {type : Boolean}}; }\n      bar = 'outer';\n      bool = false;\n\n      render() {\n        return html`<x-2448 .foo=\"${this.bar}\" attr=\"${this.bar}\" .bool=\"${\n            this.bool}\"></x-2448>`;\n      }\n\n      firstUpdated() { this.inner = this.shadowRoot!.querySelector('x-2448'); }\n\n      get updateComplete() {\n        return super.updateComplete.then(() => this.inner!.updateComplete);\n      }\n    }\n    customElements.define(generateElementName(), F);\n    const el = new F();\n    container.appendChild(el);\n    await el.updateComplete;\n    assert.equal(el.inner!.shadowRoot!.textContent, 'outer');\n    assert.equal((el.inner! as any).attr, 'outer');\n    assert.equal(el.inner!.getAttribute('attr'), 'outer');\n    assert.equal(el.inner!.bool, false);\n    el.bar = 'test';\n    el.bool = true;\n    await el.updateComplete;\n    assert.equal(el.inner!.shadowRoot!.textContent, 'test');\n    assert.equal((el.inner! as any).attr, 'test');\n    assert.equal(el.inner!.getAttribute('attr'), 'test');\n    assert.equal(el.inner!.bool, true);\n  });\n});\n"]}